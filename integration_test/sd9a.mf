; sd9a.mf
; 18-649 Distributed Embedded Systems
; Group 11
; Rahul Ramesh // rahulram. Daniel Santoro // ddsantor. David Thompson // davidtho. Jialiang Tan // jialiant
; !@

; Unit test for Dispatcher - STATE_STOP
; Daniel Santoro

;Note:  Assertions must be inserted more than two periods after a message or physical
;value has been inserted to be sure that the change propagates through the system

;this test file demonstrates network and framework message injections
;and network, framework, and controller state assertions.

#INCLUDE defines.mf 

;; PRECONDITIONS
; PRECONDITION 1: Elevator is moving in hallway

;check initial Dispatcher conditions
200ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 1 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

; move Dispatcher to STOP state
+300ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = TRUE
+0ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][BACK]_CAN_ID AtFloor 1 BACK = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = TRUE
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[FRONT][LEFT]_CAN_ID DoorMotorCommand FRONT LEFT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[FRONT][RIGHT]_CAN_ID DoorMotorCommand FRONT RIGHT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[BACK][LEFT]_CAN_ID DoorMotorCommand BACK LEFT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[BACK][RIGHT]_CAN_ID DoorMotorCommand BACK RIGHT = MDOOR_STOP

; check Dispatcher is in STOP state
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 0 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

; Transition Dispatcher to MOVE ALL state
+300ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[2][BACK][UP]_CAN_ID HallCall 2 BACK UP = TRUE

; ASSERT State MOVE ALL
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 2 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == BACK 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

; GET away from first floor
+300ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = FALSE
+0ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][BACK]_CAN_ID AtFloor 1 BACK = FALSE

; SCENARIO
; STEP 1: Doors open
;#arc '9E/1'
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = FALSE

; Dispatcher resets desired floor
;#arc '9E/2'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 1 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

;; POSTCONDITIONS 
; POSTCONDITION 1 - Dispatcher has reset DesiredFloor
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 1 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP