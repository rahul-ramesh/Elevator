; Dispatcher_0.3.mf
; 18-649 Distributed Embedded Systems
; Group 11
; Rahul Ramesh // rahulram. Daniel Santoro // ddsantor. David Thompson // davidtho. Jialiang Tan // jialiant
; !@

; Unit test for Dispatcher - STATE_MOVE_CAR_CALL
; Daniel Santoro    

;Note: Assertions must be inserted more than two periods after a message or physical
;value has been inserted to be sure that the change propagates through the system

;this test file demonstrates network and framework message injections
;and network, framework, and controller state assertions.

#INCLUDE defines.mf 

;; INITIAL RUN THROUGH LOGIC

;check initial conditions
;#state 'SAFETY'
200ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 1 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

; move to STOP state
;#transition 'PT0'
+300ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = TRUE
+0ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][BACK]_CAN_ID AtFloor 1 BACK = TRUE
+0ms I DRIVE_PERIOD N DRIVE_SPEED_CAN_ID DriveSpeed = 0 STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[FRONT][LEFT]_CAN_ID DoorMotorCommand FRONT LEFT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[FRONT][RIGHT]_CAN_ID DoorMotorCommand FRONT RIGHT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[BACK][LEFT]_CAN_ID DoorMotorCommand BACK LEFT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[BACK][RIGHT]_CAN_ID DoorMotorCommand BACK RIGHT = MDOOR_STOP
+0ms I CAR_LEVEL_POSITION_PERIOD N CAR_LEVEL_POSITION_CAN_ID CarLevelPosition = 0
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = TRUE

;#state 'STOP'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 0
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

; transition to state MOVE_CAR_CALL due to a car call at floor 5 FRONT
;#transition 'PT4'
+300ms I CAR_BUTTON_CONTROL_PERIOD N CAR_CALL_[5][FRONT]_CAN_ID CarCall 5 FRONT = TRUE

;#state 'MOVE_CAR_CALL'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 5
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

;; TRANSITION TO MOVE_ALL : CARCALL 3 FRONT

;#transition 'PT7'
+300ms I CAR_BUTTON_CONTROL_PERIOD N CAR_CALL_[3][FRONT]_CAN_ID CarCall 3 FRONT = TRUE

;#state 'MOVE_ALL'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 3
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

;; RESET SYSTEM

;#transition 'PT20'
+300ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = FALSE
+0ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][BACK]_CAN_ID AtFloor 1 BACK = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = FALSE

; turn car calls off...
+0ms I CAR_BUTTON_CONTROL_PERIOD N CAR_CALL_[3][FRONT]_CAN_ID CarCall 3 FRONT = FALSE
+0ms I CAR_BUTTON_CONTROL_PERIOD N CAR_CALL_[5][FRONT]_CAN_ID CarCall 5 FRONT = FALSE

;; SUBSEQUENT RUN THROUGH LOGIC

;#state 'SAFETY'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 1 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

; move to STOP state
;#transition 'PT0'
+300ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = TRUE
+0ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][BACK]_CAN_ID AtFloor 1 BACK = TRUE
+0ms I DRIVE_PERIOD N DRIVE_SPEED_CAN_ID DriveSpeed = 0 STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[FRONT][LEFT]_CAN_ID DoorMotorCommand FRONT LEFT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[FRONT][RIGHT]_CAN_ID DoorMotorCommand FRONT RIGHT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[BACK][LEFT]_CAN_ID DoorMotorCommand BACK LEFT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[BACK][RIGHT]_CAN_ID DoorMotorCommand BACK RIGHT = MDOOR_STOP
+0ms I CAR_LEVEL_POSITION_PERIOD N CAR_LEVEL_POSITION_CAN_ID CarLevelPosition = 0
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = TRUE

;#state 'STOP'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 0 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

; transition to state MOVE_CAR_CALL due to a car call at floor 5 FRONT
;#transition 'PT4'
+300ms I CAR_BUTTON_CONTROL_PERIOD N CAR_CALL_[5][FRONT]_CAN_ID CarCall 5 FRONT = TRUE

;#state 'MOVE_CAR_CALL'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 5
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

;; TRANSITION TO MOVE_ALL : HALLCALL 3 FRONT UP

;#transition 'PT7'
+300ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[3][FRONT][UP]_CAN_ID HallCall 3 FRONT UP = TRUE

;#state 'MOVE_ALL'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 3
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

;; RESET SYSTEM

;#transition 'PT20'
+300ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = FALSE
+0ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][BACK]_CAN_ID AtFloor 1 BACK = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = FALSE

; turn hall/car calls off...
+0ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[3][FRONT][UP]_CAN_ID HallCall 3 FRONT UP = FALSE
+0ms I CAR_BUTTON_CONTROL_PERIOD N CAR_CALL_[5][FRONT]_CAN_ID CarCall 5 FRONT = FALSE

;; SUBSEQUENT RUN THROUGH LOGIC

;#state 'SAFETY'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 1 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

; move to STOP state
;#transition 'PT0'
+300ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = TRUE
+0ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][BACK]_CAN_ID AtFloor 1 BACK = TRUE
+0ms I DRIVE_PERIOD N DRIVE_SPEED_CAN_ID DriveSpeed = 0 STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[FRONT][LEFT]_CAN_ID DoorMotorCommand FRONT LEFT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[FRONT][RIGHT]_CAN_ID DoorMotorCommand FRONT RIGHT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[BACK][LEFT]_CAN_ID DoorMotorCommand BACK LEFT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[BACK][RIGHT]_CAN_ID DoorMotorCommand BACK RIGHT = MDOOR_STOP
+0ms I CAR_LEVEL_POSITION_PERIOD N CAR_LEVEL_POSITION_CAN_ID CarLevelPosition = 0
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = TRUE

;#state 'STOP'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 0
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

; transition to state MOVE_CAR_CALL due to a car call at floor 5 FRONT
;#transition 'PT4'
+300ms I CAR_BUTTON_CONTROL_PERIOD N CAR_CALL_[5][FRONT]_CAN_ID CarCall 5 FRONT = TRUE

;#state 'MOVE_CAR_CALL'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 5
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

;; TRANSITION TO MOVE_ALL : CARCALL < HALLCALL

;#transition 'PT7'
+300ms I CAR_BUTTON_CONTROL_PERIOD N CAR_CALL_[2][BACK]_CAN_ID CarCall 2 BACK = TRUE
+0ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[3][FRONT][UP]_CAN_ID HallCall 3 FRONT UP = TRUE

;#state 'MOVE_ALL'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 2
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == BACK 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

;; RESET SYSTEM

;#transition 'PT20'
+300ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = FALSE
+0ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][BACK]_CAN_ID AtFloor 1 BACK = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = FALSE

; turn hall/car calls off...
+0ms I CAR_BUTTON_CONTROL_PERIOD N CAR_CALL_[2][BACK]_CAN_ID CarCall 2 BACK = FALSE
+0ms I CAR_BUTTON_CONTROL_PERIOD N CAR_CALL_[5][FRONT]_CAN_ID CarCall 5 FRONT = FALSE
+0ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[3][FRONT][UP]_CAN_ID HallCall 3 FRONT UP = FALSE

;; SUBSEQUENT RUN THROUGH LOGIC

;#state 'SAFETY'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 1 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

; move to STOP state
;#transition 'PT0'
+300ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = TRUE
+0ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][BACK]_CAN_ID AtFloor 1 BACK = TRUE
+0ms I DRIVE_PERIOD N DRIVE_SPEED_CAN_ID DriveSpeed = 0 STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[FRONT][LEFT]_CAN_ID DoorMotorCommand FRONT LEFT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[FRONT][RIGHT]_CAN_ID DoorMotorCommand FRONT RIGHT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[BACK][LEFT]_CAN_ID DoorMotorCommand BACK LEFT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[BACK][RIGHT]_CAN_ID DoorMotorCommand BACK RIGHT = MDOOR_STOP
+0ms I CAR_LEVEL_POSITION_PERIOD N CAR_LEVEL_POSITION_CAN_ID CarLevelPosition = 0
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = TRUE

;#state 'STOP'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 0
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

; transition to state MOVE_CAR_CALL due to a car call at floor 5 FRONT
;#transition 'PT4'
+300ms I CAR_BUTTON_CONTROL_PERIOD N CAR_CALL_[5][FRONT]_CAN_ID CarCall 5 FRONT = TRUE

;#state 'MOVE_CAR_CALL'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 5
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

;; TRANSITION TO MOVE_ALL : CARCALL > HALLCALL

;#transition 'PT7'
+300ms I CAR_BUTTON_CONTROL_PERIOD N CAR_CALL_[4][FRONT]_CAN_ID CarCall 4 FRONT = TRUE
+0ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[3][FRONT][UP]_CAN_ID HallCall 3 FRONT UP = TRUE

;#state 'MOVE_ALL'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 3
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

;; RESET SYSTEM

;#transition 'PT20'
+300ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = FALSE
+0ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][BACK]_CAN_ID AtFloor 1 BACK = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = FALSE

; turn hall/car calls off...
+0ms I CAR_BUTTON_CONTROL_PERIOD N CAR_CALL_[4][FRONT]_CAN_ID CarCall 4 FRONT = FALSE
+0ms I CAR_BUTTON_CONTROL_PERIOD N CAR_CALL_[5][FRONT]_CAN_ID CarCall 5 FRONT = FALSE
+0ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[3][FRONT][UP]_CAN_ID HallCall 3 FRONT UP = FALSE

;#state 'SAFETY'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 1 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

; move to STOP state
;#transition 'PT0'
+300ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = TRUE
+0ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][BACK]_CAN_ID AtFloor 1 BACK = TRUE
+0ms I DRIVE_PERIOD N DRIVE_SPEED_CAN_ID DriveSpeed = 0 STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[FRONT][LEFT]_CAN_ID DoorMotorCommand FRONT LEFT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[FRONT][RIGHT]_CAN_ID DoorMotorCommand FRONT RIGHT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[BACK][LEFT]_CAN_ID DoorMotorCommand BACK LEFT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[BACK][RIGHT]_CAN_ID DoorMotorCommand BACK RIGHT = MDOOR_STOP
+0ms I CAR_LEVEL_POSITION_PERIOD N CAR_LEVEL_POSITION_CAN_ID CarLevelPosition = 0
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = TRUE

;#state 'STOP'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 0 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

; transition to state MOVE_CAR_CALL due to a car call at floor 5 FRONT
;#transition 'PT4'
+300ms I CAR_BUTTON_CONTROL_PERIOD N CAR_CALL_[5][FRONT]_CAN_ID CarCall 5 FRONT = TRUE

;#state 'MOVE_CAR_CALL'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 5
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

;; ENSURE ROBUSTNESS TO CARCALLS/HALLCALLS TO BE IGNORED

; make sure that nothing can move it that isn't supposed to
+300ms I CAR_BUTTON_CONTROL_PERIOD N CAR_CALL_[6][FRONT]_CAN_ID CarCall 6 FRONT = TRUE

;#state 'MOVE_CAR_CALL'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 5
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

; make sure that nothing can move it that isn't supposed to
+300ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[8][FRONT][DOWN]_CAN_ID HallCall 8 FRONT DOWN = TRUE

;#state 'MOVE_CAR_CALL'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 5
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

; make sure that nothing can move it that isn't supposed to
+300ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[7][BACK][UP]_CAN_ID HallCall 7 BACK UP = TRUE

;#state 'MOVE_CAR_CALL'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 5
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

;; TRANSITION TO FLOOR_SERVICED STATE

; leave floor 1
+300ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = FALSE
+0ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][BACK]_CAN_ID AtFloor 1 BACK = FALSE

; clear out all calls
+0ms I CAR_BUTTON_CONTROL_PERIOD N CAR_CALL_[6][FRONT]_CAN_ID CarCall 6 FRONT = FALSE
+0ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[8][FRONT][DOWN]_CAN_ID HallCall 8 FRONT DOWN = FALSE
+0ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[7][BACK][UP]_CAN_ID HallCall 7 BACK UP = FALSE

; move to FLOOR_SERVICED state
;#transition 'PT8'
+300ms I AT_FLOOR_PERIOD N AT_FLOOR_[5][FRONT]_CAN_ID AtFloor 5 FRONT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = FALSE
+0ms I CAR_BUTTON_CONTROL_PERIOD N CAR_CALL_[5][FRONT]_CAN_ID CarCall 5 FRONT = FALSE 

; moved to FLOOR_SERVICED with no other calls pending
;#state 'FLOOR_SERVICED'
+500ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 0 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

