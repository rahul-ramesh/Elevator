; Dispatcher_0.2.mf
; 18-649 Distributed Embedded Systems
; Group 11
; Rahul Ramesh // rahulram. Daniel Santoro // ddsantor. David Thompson // davidtho. Jialiang Tan // jialiant
; !@

; Unit test for Dispatcher - STATE_MOVE_ALL
; Daniel Santoro

;Note:  Assertions must be inserted more than two periods after a message or physical
;value has been inserted to be sure that the change propagates through the system

;this test file demonstrates network and framework message injections
;and network, framework, and controller state assertions.

#INCLUDE defines.mf 

;; INITIAL RUN THROUGH LOGIC

;#state 'SAFETY'
200ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 1 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

; move to STOP state
;#transition 'PT0'
+300ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = TRUE
+0ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][BACK]_CAN_ID AtFloor 1 BACK = TRUE
+0ms I DRIVE_PERIOD N DRIVE_SPEED_CAN_ID DriveSpeed = 0 STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[FRONT][LEFT]_CAN_ID DoorMotorCommand FRONT LEFT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[FRONT][RIGHT]_CAN_ID DoorMotorCommand FRONT RIGHT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[BACK][LEFT]_CAN_ID DoorMotorCommand BACK LEFT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[BACK][RIGHT]_CAN_ID DoorMotorCommand BACK RIGHT = MDOOR_STOP
+0ms I CAR_LEVEL_POSITION_PERIOD N CAR_LEVEL_POSITION_CAN_ID CarLevelPosition = 0
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = TRUE

;#state 'STOP'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 0 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

; transition to state MOVE_ALL due to a Hall call at floor 5 FRONT UP
;#transition 'PT2'
+300ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[5][FRONT][UP]_CAN_ID HallCall 5 FRONT UP = TRUE

;#state 'MOVE_ALL'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 5 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

;; UPDATE TARGETF WITH CAR CALL ONLY 

+300ms I CAR_BUTTON_CONTROL_PERIOD  N CAR_CALL_[4][FRONT]_CAN_ID CarCall 4 FRONT = TRUE

;#state 'MOVE_ALL'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 4 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

;; RESET SYSTEM

;#transition 'PT20'
+300ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = FALSE
+0ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][BACK]_CAN_ID AtFloor 1 BACK = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = FALSE

; turn Car/Hall call off...
+0ms I CAR_BUTTON_CONTROL_PERIOD  N CAR_CALL_[4][FRONT]_CAN_ID CarCall 4 FRONT = FALSE
+0ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[5][FRONT][UP]_CAN_ID HallCall 5 FRONT UP = FALSE

;; SUBSEQUENT RUN THROUGH LOGIC

;#state 'SAFETY'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 1 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

; move to STOP state
;#transition 'PT0'
+300ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = TRUE
+0ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][BACK]_CAN_ID AtFloor 1 BACK = TRUE
+0ms I DRIVE_PERIOD N DRIVE_SPEED_CAN_ID DriveSpeed = 0 STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[FRONT][LEFT]_CAN_ID DoorMotorCommand FRONT LEFT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[FRONT][RIGHT]_CAN_ID DoorMotorCommand FRONT RIGHT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[BACK][LEFT]_CAN_ID DoorMotorCommand BACK LEFT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[BACK][RIGHT]_CAN_ID DoorMotorCommand BACK RIGHT = MDOOR_STOP
+0ms I CAR_LEVEL_POSITION_PERIOD N CAR_LEVEL_POSITION_CAN_ID CarLevelPosition = 0
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = TRUE

;#state 'STOP'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 0
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

; transition to state MOVE_ALL due to a Hall call at floor 5 FRONT UP
;#transition 'PT2'
+300ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[5][FRONT][UP]_CAN_ID HallCall 5 FRONT UP = TRUE

;#state 'MOVE_ALL'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 5 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

;; UPDATE TARGETF WITH HALL CALL ONLY

+300ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[4][FRONT][UP]_CAN_ID HallCall 4 FRONT UP = TRUE

;#state 'MOVE_ALL'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 4 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

;; RESET THE SYSTEM

;#transition 'PT20'
+300ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = FALSE
+0ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][BACK]_CAN_ID AtFloor 1 BACK = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = FALSE

; turn Car/Hall call off...
+0ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[4][FRONT][UP]_CAN_ID HallCall 4 FRONT UP = FALSE
+0ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[5][FRONT][UP]_CAN_ID HallCall 5 FRONT UP = FALSE

;; SUBSEQUENT RUN THROUGH LOGIC

;#state 'SAFETY'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 1 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

; move to STOP state
;#transition 'PT0'
+300ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = TRUE
+0ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][BACK]_CAN_ID AtFloor 1 BACK = TRUE
+0ms I DRIVE_PERIOD N DRIVE_SPEED_CAN_ID DriveSpeed = 0 STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[FRONT][LEFT]_CAN_ID DoorMotorCommand FRONT LEFT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[FRONT][RIGHT]_CAN_ID DoorMotorCommand FRONT RIGHT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[BACK][LEFT]_CAN_ID DoorMotorCommand BACK LEFT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[BACK][RIGHT]_CAN_ID DoorMotorCommand BACK RIGHT = MDOOR_STOP
+0ms I CAR_LEVEL_POSITION_PERIOD N CAR_LEVEL_POSITION_CAN_ID CarLevelPosition = 0
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = TRUE

;#state 'STOP'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 0 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

; transition to state MOVE_ALL due to a Hall call at floor 5 FRONT UP
;#transition 'PT2'
+300ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[5][FRONT][UP]_CAN_ID HallCall 5 FRONT UP = TRUE

;#state 'MOVE_ALL'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 5 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

;; UPDATE TARGETF WITH CARCALL < HALLCALL

+300ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[4][FRONT][UP]_CAN_ID HallCall 4 FRONT UP = TRUE
+0ms I CAR_BUTTON_CONTROL_PERIOD  N CAR_CALL_[2][BACK]_CAN_ID CarCall 2 BACK = TRUE

;#state 'MOVE_ALL'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 2 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == BACK 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

;; RESET SYSTEM

;#transition 'PT20'
+300ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = FALSE
+0ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][BACK]_CAN_ID AtFloor 1 BACK = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = FALSE

; turn Car/Hall call off...
+300ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[4][FRONT][UP]_CAN_ID HallCall 4 FRONT UP = FALSE
+0ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[5][FRONT][UP]_CAN_ID HallCall 5 FRONT UP = FALSE
+0ms I CAR_BUTTON_CONTROL_PERIOD  N CAR_CALL_[2][BACK]_CAN_ID CarCall 2 BACK = FALSE

;; SUBSEQUENT RUN THROUGH LOGIC

;#state 'SAFETY'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 1 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

; move to STOP state
;#transition 'PT0'
+300ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = TRUE
+0ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][BACK]_CAN_ID AtFloor 1 BACK = TRUE
+0ms I DRIVE_PERIOD N DRIVE_SPEED_CAN_ID DriveSpeed = 0 STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[FRONT][LEFT]_CAN_ID DoorMotorCommand FRONT LEFT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[FRONT][RIGHT]_CAN_ID DoorMotorCommand FRONT RIGHT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[BACK][LEFT]_CAN_ID DoorMotorCommand BACK LEFT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[BACK][RIGHT]_CAN_ID DoorMotorCommand BACK RIGHT = MDOOR_STOP
+0ms I CAR_LEVEL_POSITION_PERIOD N CAR_LEVEL_POSITION_CAN_ID CarLevelPosition = 0
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = TRUE

;#state 'STOP'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 0
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

; transition to state MOVE_ALL due to a Hall call at floor 5 FRONT UP
;#transition 'PT2'
+300ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[5][FRONT][UP]_CAN_ID HallCall 5 FRONT UP = TRUE

;#state 'MOVE_ALL'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 5 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

;; UPDATE TARGETF WITH CARCALL > HALLCALL

+300ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[2][BACK][UP]_CAN_ID HallCall 2 BACK UP = TRUE
+0ms I CAR_BUTTON_CONTROL_PERIOD  N CAR_CALL_[4][FRONT]_CAN_ID CarCall 4 FRONT = TRUE

;#state 'MOVE_ALL'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 2 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == BACK 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

;; RESET SYSTEM

;#transition 'PT20'
+300ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = FALSE
+0ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][BACK]_CAN_ID AtFloor 1 BACK = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = FALSE

; turn Car/Hall call off...
+300ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[2][BACK][UP]_CAN_ID HallCall 2 BACK UP = FALSE
+0ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[5][FRONT][UP]_CAN_ID HallCall 5 FRONT UP = FALSE
+0ms I CAR_BUTTON_CONTROL_PERIOD  N CAR_CALL_[4][FRONT]_CAN_ID CarCall 4 FRONT = FALSE

;; SUBSEQUENT RUN THROUGH LOGIC

;#state 'SAFETY'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 1 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

; move to STOP state
;#transition 'PT0'
+300ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = TRUE
+0ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][BACK]_CAN_ID AtFloor 1 BACK = TRUE
+0ms I DRIVE_PERIOD N DRIVE_SPEED_CAN_ID DriveSpeed = 0 STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[FRONT][LEFT]_CAN_ID DoorMotorCommand FRONT LEFT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[FRONT][RIGHT]_CAN_ID DoorMotorCommand FRONT RIGHT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[BACK][LEFT]_CAN_ID DoorMotorCommand BACK LEFT = MDOOR_STOP
+0ms I DOOR_CONTROL_PERIOD N DOOR_MOTOR_COMMAND_[BACK][RIGHT]_CAN_ID DoorMotorCommand BACK RIGHT = MDOOR_STOP
+0ms I CAR_LEVEL_POSITION_PERIOD N CAR_LEVEL_POSITION_CAN_ID CarLevelPosition = 0
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = TRUE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = TRUE

;#state 'STOP'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 0 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == STOP

; transition to state MOVE_ALL due to a Hall call at floor 5 FRONT UP
;#transition 'PT2'
+300ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[5][FRONT][UP]_CAN_ID HallCall 5 FRONT UP = TRUE

;#state 'MOVE_ALL'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 5 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

;; TEST ROBUSTNESS AGAINST CARCALLS/HALLCALLS TO BE IGNORED

+300ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[2][BACK][DOWN]_CAN_ID HallCall 2 BACK DOWN = TRUE

;#state 'MOVE_ALL'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 5 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

; Ensure that calls that should not matter in fact do not matter
+300ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[6][FRONT][UP]_CAN_ID HallCall 6 FRONT UP = TRUE

;#state 'MOVE_ALL'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 5 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

; Ensure that calls that should not matter in fact do not matter
+2000ms I CAR_BUTTON_CONTROL_PERIOD  N CAR_CALL_[8][FRONT]_CAN_ID CarCall 8 FRONT = TRUE

;#state 'MOVE_ALL'
+300ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 5 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == FRONT 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP

;; CLEAN UP
+0ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[2][BACK][DOWN]_CAN_ID HallCall 2 BACK DOWN = FALSE
+0ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[6][FRONT][UP]_CAN_ID HallCall 6 FRONT UP = FALSE
+0ms I CAR_BUTTON_CONTROL_PERIOD  N CAR_CALL_[8][FRONT]_CAN_ID CarCall 8 FRONT = FALSE

;; TRANSITION TO FLOOR_SERVICED

; leave first floor
+300ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][FRONT]_CAN_ID AtFloor 1 FRONT = FALSE
+0ms I AT_FLOOR_PERIOD N AT_FLOOR_[1][BACK]_CAN_ID AtFloor 1 BACK = FALSE

; move to FLOOR_SERVICED state
;#transition 'PT5'
+300ms I AT_FLOOR_PERIOD N AT_FLOOR_[5][FRONT]_CAN_ID AtFloor 5 FRONT = TRUE
+0ms I DRIVE_PERIOD N DRIVE_SPEED_CAN_ID DriveSpeed = 0 STOP
+0ms I CAR_LEVEL_POSITION_PERIOD N CAR_LEVEL_POSITION_CAN_ID CarLevelPosition = 20000
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = FALSE
+0ms I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = FALSE
+0ms I HALL_BUTTON_CONTROL_PERIOD N HALL_CALL_[5][FRONT][UP]_CAN_ID HallCall 5 FRONT UP = FALSE

; moved to FLOOR_SERVICED with no other calls pending
;#state 'FLOOR_SERVICED'
+500ms A N DESIRED_FLOOR_CAN_ID DesiredFloor : getFloor == 0 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getHallway == NONE 
+0s A N DESIRED_FLOOR_CAN_ID DesiredFloor : getDirection == UP
